[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "fastboot"
version = "0.1.0"
description = ""
authors = ["Arpan Mahanty <arpan.mahanty.007@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.6.3"
pydantic-settings = "^2.2.1"
fastapi = "^0.110.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.4.0"
uvicorn = "^0.28.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^4.1.0"

[tool.pytest.ini_options]
testpaths = ['tests']
addopts = "--cov"

[tool.coverage.run]
source = ["fastboot"]
branch = true

[tool.coverage.report]
precision = 2
# fail_under = 98.35
show_missing = true
skip_covered = true
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "pragma: nocover",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "raise NotImplementedError",
]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
# preview = true

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true
unsafe-fixes = true

[tool.ruff.lint]
select = [
    "YTT",      # flake8-2020
    "S",        # flake8-bandit
    "B",        # flake8-bugbear
    "A",        # flake8-builtins
    "C4",       # flake8-comprehensions
    "T10",      # flake8-debugger
    "SIM",      # flake8-simplify
    "I",        # isort
    "C90",      # mccabe
    "E", "W",   # pycodestyle
    "F",        # pyflakes
    "PGH",      # pygrep-hooks
    "UP",       # pyupgrade
    "RUF",      # ruff
    "TRY",      # tryceratops
]
ignore = [
    "E501",     # LineTooLong
    "E731",     # DoNotAssignLambda
    "TRY003",   # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
    "S101"      # Assert
]
